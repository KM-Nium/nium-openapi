openapi: 3.0.3
info:
  contact:
    email: experience@nium.com
    name: NIUM Platform
    url: https://www.nium.com
  description: NIUM Platform
  license:
    name: Copyright (c) 2023 NIUM
  title: NIUM Platform
  version: 10.31.2023
servers:
- url: https://gatewaysandbox.nium.com/
tags:
- name: Customer Funding
  description: REST API's for Customer Funding
- name: Customer Virtual Accounts
  description: REST API's for Customer Virtual Accounts
paths:
  /api/v1/client/{clientHashId}/customer/{customerHashId}/fundingInstruments/{fundingInstrumentId}/confirmFundingInstrument:
    post:
      parameters:
      - description: Unique client identifier generated and shared before API handshake.
        in: path
        name: clientHashId
        required: true
        schema:
          type: string
      - description: Unique customer identifier generated on customer creation.
        in: path
        name: customerHashId
        required: true
        schema:
          type: string
      - description: This field is the unique 36-character funding instrument identifier.
          The id is a bank account identifier when the funding channel is direct debit.
        in: path
        name: fundingInstrumentId
        required: true
        schema:
          type: string
      - description: Enter a unique UUID value
        in: header
        name: x-request-id
        schema:
          type: string
          example: '{{$guid}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountStatusResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayinApiError'
          description: BadRequest
        '401':
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                type: string
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayinApiError'
          description: Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayinApiError'
          description: Internal Server Error
      tags:
      - Customer Funding
      deprecated: false
      description: This API allows you to confirm funding instrument id
      operationId: ConfirmFundingInstrumentId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmFundingInstrumentRequestDTO'
        description: Confirm funding instrument
      summary: Confirm funding instrument
      x-info:
        apiType: external
      security:
      - default: []
  /api/v1/client/{clientHashId}/customer/{customerHashId}/fundingInstruments/{fundingInstrumentId}/fundingInstrumentDetails:
    get:
      parameters:
      - description: Unique client identifier generated and shared before API handshake.
        in: path
        name: clientHashId
        required: true
        schema:
          type: string
      - description: Unique customer identifier generated on customer creation.
        in: path
        name: customerHashId
        required: true
        schema:
          type: string
      - description: Unique 36-character funding instrument identifier.
        in: path
        name: fundingInstrumentId
        required: true
        schema:
          type: string
      - description: Enter a unique UUID value
        in: header
        name: x-request-id
        schema:
          type: string
          example: '{{$guid}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountStatusResponse'
              examples:
                US:
                  value:
                    bankName: US Bank
                    fundingInstrumentId: 7ac4bc1f-3e81-4766-a908-6231ddd79531
                    fundingChannel: DIRECT_DEBIT
                    clientHashId: 94c15268-41fb-4518-8191-a4f7feed17a5
                    customerHashId: 8fdc1fd6-3e2c-41f2-9d25-19a7056b60f5
                    walletHashId: fd25a7d3-e8d7-4379-b5a9-e8044d492cae
                    saved: true
                    status: APPROVED
                    statusDescription: SUCCESS
                    maskedAccountNumber: XXXXXXXXXXXX1111
                    routingType: ACH CODE
                    routingValue: '011401533'
                    country: US
                    currency: USD
                    createdAt: '2023-01-02 12:21:52'
                    updatedAt: '2023-01-02 12:27:00'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayinApiError'
          description: BadRequest
        '401':
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                type: string
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayinApiError'
          description: Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayinApiError'
          description: Internal Server Error
      tags:
      - Customer Funding
      deprecated: false
      description: Get Funding instrument details
      operationId: GetFundingInstrumentDetails
      summary: Get Funding instrument details
      x-info:
        apiType: external
      security:
      - default: []
  /api/v1/client/{clientHashId}/customer/{customerHashId}/fundingInstruments:
    get:
      parameters:
      - description: Unique client identifier generated and shared before API handshake.
        in: path
        name: clientHashId
        required: true
        schema:
          type: string
          example: '{{clientHashId}}'
      - description: Unique customer identifier generated on customer creation.
        in: path
        name: customerHashId
        required: true
        schema:
          type: string
      - description: Enter a unique UUID value
        in: header
        name: x-request-id
        schema:
          type: string
          example: '{{$guid}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WalletFundingInstrumentsResponseDTO'
                type: array
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayinApiError'
          description: BadRequest
        '401':
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                type: string
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayinApiError'
          description: Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayinApiError'
          description: Internal Server Error
      tags:
      - Customer Funding
      deprecated: false
      description: This API allows you to fetch the funding instruments that have
        been registered for a customer.
      operationId: GetFundingInstrumentList
      summary: Get Funding Instrument List
      x-info:
        apiType: external
      security:
      - default: []
  /api/v1/client/{clientHashId}/customer/{customerHashId}/fundingInstruments/{fundingInstrumentId}:
    delete:
      parameters:
      - description: Unique client identifier generated and shared before API handshake.
        in: path
        name: clientHashId
        required: true
        schema:
          type: string
          example: '{{clientHashId}}'
      - description: Unique customer identifier generated on customer creation.
        in: path
        name: customerHashId
        required: true
        schema:
          type: string
      - description: The unique 36-character alphanumeric identifier of a funding
          instrument.
        in: path
        name: fundingInstrumentId
        required: true
        schema:
          type: string
      - description: Enter a unique UUID value
        in: header
        name: x-request-id
        schema:
          type: string
          example: '{{$guid}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseOfstring'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayinApiError'
          description: BadRequest
        '401':
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                type: string
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayinApiError'
          description: Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayinApiError'
          description: Internal Server Error
      tags:
      - Customer Funding
      deprecated: false
      operationId: deleteFundinginstrument
      summary: Delete Funding Instrument
      x-info:
        apiType: external
      security:
      - default: []
      description: This API allows you to delete a specific funding instrument based
        on the fundingInstrumentId.
  /api/v1/client/{clientHashId}/customer/{customerHashId}/wallet/{walletHashId}/fundingInstruments:
    post:
      parameters:
      - description: Unique client identifier generated and shared before API handshake.
        in: path
        name: clientHashId
        required: true
        schema:
          type: string
      - description: Unique customer identifier generated on customer creation.
        in: path
        name: customerHashId
        required: true
        schema:
          type: string
      - description: Unique wallet identifier generated simultaneously with customer
          creation.
        in: path
        name: walletHashId
        required: true
        schema:
          type: string
      - description: Enter a unique UUID value
        in: header
        name: x-request-id
        schema:
          type: string
          example: '{{$guid}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkAccountResponse'
              examples:
                US:
                  value:
                    fundingInstrumentId: 1c8739c0-13f8-4ea8-9ed9-5f920a7e0492
                    status: PENDING
                    fundingChannel: DIRECT_DEBIT
                    country: US
                    currency: USD
                    createdAtTime: '2023-03-09 19:27:22'
                    returnUrl: https://integrationspreprod.partners.instarem.com/preprod/plaid/account-link-v2/accounts/link?tokenId=eyJhbGciOiJIUzI1NiJ9.eyJlbmMiOiJMcWlLTk84ZW1pN2J2ek5GZFhMd2RickpoVmQ0cFRjNHRmcG1CL2VROW5wSFYrUy9iRzdTVUQ3V2s2aG9SWW9iMkpNSUsxUjkvaVM2aHRrbkpkcGhpdz09IiwiZXhwIjoxNjc4MzkxODQyLCJpYXQiOjE2NzgzOTAwNDJ9.6aXNX7_G-l36s4eY_LQVKxk_suXxE6f1ud7eV7NHkvg
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayinApiError'
          description: BadRequest
        '401':
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                type: string
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayinApiError'
          description: Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayinApiError'
          description: Internal Server Error
      tags:
      - Customer Funding
      deprecated: false
      description: This API allows you to link account
      operationId: AddFundingInstrument
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerLinkAccountRequest'
            examples:
              US:
                value:
                  country: US
                  currency: USD
                  fundingChannel: DIRECT_DEBIT
        description: Add a new funding instrument
      summary: Add funding instrument
      x-info:
        apiType: external
      security:
      - default: []
  /api/v1/client/{clientHashId}/customer/{customerHashId}/wallet/{walletHashId}/fund:
    post:
      parameters:
      - description: Unique client identifier generated and shared before API handshake.
        in: path
        name: clientHashId
        required: true
        schema:
          type: string
          example: '{{clientHashId}}'
      - description: Unique customer identifier generated on customer creation.
        in: path
        name: customerHashId
        required: true
        schema:
          type: string
      - description: Unique wallet identifier generated simultaneously with customer
          creation.
        in: path
        name: walletHashId
        required: true
        schema:
          type: string
      - description: Enter a unique UUID value
        in: header
        name: x-request-id
        schema:
          type: string
          example: '{{$guid}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletFundResponseDTO'
              examples:
                BANK_TRANSFER:
                  value:
                    destinationAmount: 500
                    destinationCurrencyCode: USD
                    paymentMethods:
                    - accountName: NIUM Pte Ltd.
                      accountNumber: '999456781932'
                      bankName: DBS SG
                      type: bankTransfer
                    - qrCode: 
                      type: dynamicPayNow
                    - UEN: 12345678U12A
                      type: staticPayNow
                    - accountName: NIUM FINTECH LIMITED - CMA
                      accountNumber: '13470105'
                      bankName: BARCLAYS_UK
                      iban: GB90BARC20000013470105
                      sortCode: '200000'
                      type: bankTransfer
                    sourceAmount: 500
                    sourceCurrencyCode: SGD
                    status: Pending
                    systemReferenceNumber: FW5289214401
                CARDS:
                  value:
                    systemReferenceNumber: FW0968045292
                    sourceAmount: 23
                    sourceCurrencyCode: SGD
                    destinationAmount: 23
                    destinationCurrencyCode: SGD
                    status: Pending
                    paymentMethods: []
                    returnUrl: https://hooks.stripe.com/redirect/authenticate/src_1LNYoOIW1TKPh79li2Zb0Ue4?client_secret=src_client_secret_oCQT7m9SUfuwVqcVeDkaC0Z7&source_redirect_slug=test_YWNjdF8xSHduZlZJVzFUS1BoNzlsLF9NNWtKNmViazA3cWRIaVAxYUU4YjBmTTBpNm5HaE9R0100hmLaAeHv
                DIRECT_DEBIT:
                  value:
                    systemReferenceNumber: FW5014355697
                    sourceAmount: 25
                    sourceCurrencyCode: USD
                    destinationAmount: 25
                    destinationCurrencyCode: USD
                    status: Pending
                    paymentMethods: []
                    returnUrl: 'null'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayinApiError'
          description: BadRequest
        '401':
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                type: string
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayinApiError'
          description: Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayinApiError'
          description: Internal Server Error
      tags:
      - Customer Funding
      deprecated: false
      description: "This API allows you to top-up into the customer's wallet. Refer\
        \ to the [Fund wallet user guide](/docs/fund-wallet) for details on usage\
        \ instructions on this API.\n >\u2139\uFE0F INFO \n >**Guidelines for Fund\
        \ Wallet.**\n>1. Cards and direct_debit funding channels are restricted by\
        \ default. Reach out to your Nium support specialist to enable this functionality.\n\
        >2. Source and destination should be in the same currency when funding channel\
        \ is bank_transfer, cards, or direct_debit.\n>3. No restriction on source\
        \ or destination currency if funding channel is prefund.\n"
      operationId: FundWallet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WalletFundDTO'
            examples:
              BANK_TRANSFER:
                value:
                  amount: 500
                  destinationCurrencyCode: SGD
                  fundingChannel: BANK_TRANSFER
                  fundingInstrumentId: <hash-id>
                  sourceCurrencyCode: SGD
              Cards:
                value:
                  amount: 500
                  countryIP: 192.168.2.2
                  destinationCurrencyCode: SGD
                  deviceInfo: android
                  fundingChannel: CARD
                  fundingInstrumentId: <card-hash-id>
                  ipAddress: 192.168.1.1
                  pocketName: DEFAULT
                  sessionId: '1234'
                  sourceCurrencyCode: SGD
              DIRECT_DEBIT:
                value:
                  amount: 5000
                  sourceCurrencyCode: USD
                  destinationCurrencyCode: USD
                  fundingChannel: DIRECT_DEBIT
                  fundingInstrumentId: 7ac4bc1f-3e81-4766-a908-6231ddd79531
        description: 'Guidelines for Fund Wallet


          1.cards as a funding channel is restricted by default. It may be enabled
          for a client on request.

          2.Source and destination currencies should be same if funding channel is
          bankTransfer or cards

          3.No restriction on source or destination currency if funding channel is
          prefund.


          Fund Wallet with a Card


          Customer onboarded and KYCed successfully [through Manual or eKYC flow]
          with e-KYC calls Fund Wallet API with funding channel as cards.'
      summary: Fund Wallet
      x-info:
        apiType: external
      security:
      - default: []
  /api/v1/client/{clientHashId}/customer/{customerHashId}/wallet/{walletHashId}/paymentId:
    post:
      parameters:
      - description: Unique client identifier generated and shared before API handshake.
        in: path
        name: clientHashId
        required: true
        schema:
          type: string
          example: '{{clientHashId}}'
      - description: Unique customer identifier generated on customer creation.
        in: path
        name: customerHashId
        required: true
        schema:
          type: string
      - description: Unique wallet identifier generated simultaneously with customer
          creation.
        in: path
        name: walletHashId
        required: true
        schema:
          type: string
      - description: Enter a unique UUID value
        in: header
        name: x-request-id
        schema:
          type: string
          example: '{{$guid}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentIdResponseDTO2'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletApiError'
          description: BadRequest
        '401':
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                type: string
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletApiError'
          description: Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletApiError'
          description: Internal Server Error
      tags:
      - Customer Virtual Accounts
      deprecated: false
      description: This API allows you to assign virtual account numbers to customer
        for specific source.
      operationId: AssignPaymentID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentIdRequestDTO2'
        description: paymentIdRequestDTO2
        required: true
      summary: Assign Payment ID
      x-info:
        apiType: external
      security:
      - default: []
  /api/v1/client/{clientHashId}/customer/{customerHashId}/wallet/{walletHashId}/paymentId/tags:
    post:
      parameters:
      - description: Unique client identifier generated and shared before API handshake.
        in: path
        name: clientHashId
        required: true
        schema:
          type: string
          example: '{{clientHashId}}'
      - description: Unique customer identifier generated on customer creation.
        in: path
        name: customerHashId
        required: true
        schema:
          type: string
      - description: Unique wallet identifier generated simultaneously with customer
          creation.
        in: path
        name: walletHashId
        required: true
        schema:
          type: string
      - description: Enter a unique UUID value
        in: header
        name: x-request-id
        schema:
          type: string
          example: '{{$guid}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentIdCientTagsResponseDTO'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletApiError'
          description: BadRequest
        '401':
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                type: string
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletApiError'
          description: Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletApiError'
          description: Internal Server Error
      tags:
      - Customer Virtual Accounts
      deprecated: false
      description: This API allows you to add, update, delete client tags against
        each virtual account.
      operationId: ManageVirtualAccountTags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentIdTagRequestDTO'
        description: tags
        required: true
      summary: Manage Virtual Account Tags
      x-info:
        apiType: external
      security:
      - default: []
  /api/v1/client/{clientHashId}/customer/{customerHashId}/wallet/{walletHashId}/paymentIds:
    get:
      parameters:
      - description: Unique client identifier generated and shared before API handshake.
        in: path
        name: clientHashId
        required: true
        schema:
          type: string
          example: '{{clientHashId}}'
      - description: Unique customer identifier generated and shared before API handshake.
        in: path
        name: customerHashId
        required: true
        schema:
          type: string
      - description: Unique wallet identifier generated and shared before API handshake.
        in: path
        name: walletHashId
        required: true
        schema:
          type: string
      - description: Enter a unique UUID value
        in: header
        name: x-request-id
        schema:
          type: string
          example: '{{$guid}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WalletPaymentIdsResponseDTO'
                type: array
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletApiError'
          description: BadRequest
        '401':
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                type: string
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletApiError'
          description: Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletApiError'
          description: Internal Server Error
      tags:
      - Customer Virtual Accounts
      deprecated: false
      description: "This API allows you to fetch virtual accounts assigned to a customer's\
        \ wallet. \n \u26A0\uFE0F WARNING \n > To access updated functionality and\
        \ features we recommed using the latest version of this API [Virtual Account\
        \ Details V2](/apis/reference/virtualaccountdetailsv2). Eventually, this API\
        \ version will be deprecated and becomes unsupported."
      operationId: VirtualAccountDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualAccountRequestDTO'
        description: virtualAccountRequestDTO
        required: true
      summary: Virtual Account Details
      x-info:
        apiType: external
      security:
      - default: []
  /api/v2/client/{clientHashId}/customer/{customerHashId}/wallet/{walletHashId}/paymentIds:
    get:
      parameters:
      - description: Unique client identifier generated and shared before API handshake.
        in: path
        name: clientHashId
        required: true
        schema:
          type: string
          example: '{{clientHashId}}'
      - description: Unique customer identifier generated and shared before API handshake.
        in: path
        name: customerHashId
        required: true
        schema:
          type: string
      - description: Unique wallet identifier generated and shared before API handshake.
        in: path
        name: walletHashId
        required: true
        schema:
          type: string
      - description: Enter a unique UUID value
        in: header
        name: x-request-id
        schema:
          type: string
          example: '{{$guid}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualAccountResponseDTO'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletApiError'
          description: BadRequest
        '401':
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                type: string
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletApiError'
          description: Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletApiError'
          description: Internal Server Error
      tags:
      - Customer Virtual Accounts
      deprecated: false
      description: This API allows you to fetch virtual accounts assigned to a customer's
        wallet.
      operationId: VirtualAccountDetailsV2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualAccountRequestDTO'
        description: virtualAccountRequestDTO
        required: true
      summary: Virtual Account Details V2
      x-info:
        apiType: external
      security:
      - default: []
  /api/v1/client/{clientHashId}/customer/{customerHashId}/accountOwnershipCertificate:
    get:
      parameters:
      - description: Unique client identifier generated and shared before API handshake.
        in: path
        name: clientHashId
        required: true
        schema:
          type: string
      - allowEmptyValue: false
        description: This field accepts the list of currencies in 3-letter [ISO-4217
          transaction currency code](https://docs.nium.com/apis/docs/currency-and-country-codes)
          for which the account ownership certificate to be generated. If no currencies
          are being sent in query param then account ownership certificate will be
          generated for all the currencies enabled to the customer.
        in: query
        name: currencies
        required: false
        schema:
          type: string
      - allowEmptyValue: false
        description: This field will display the account balance of the customer as
          on date
        example: false
        in: query
        name: currentAccountBalance
        required: false
        schema:
          default: false
          type: boolean
      - description: Unique customer identifier generated on customer creation.
        in: path
        name: customerHashId
        required: true
        schema:
          type: string
      - description: Enter a unique UUID value.
        in: header
        name: x-request-id
        schema:
          type: string
          example: '{{$guid}}'
      responses:
        '200':
          description: OK
        '400':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError2'
          description: Bad Request
        '401':
          content:
            '*/*':
              schema:
                type: string
          description: Unauthorized
        '403':
          content:
            '*/*':
              schema:
                type: string
          description: Forbidden
        '404':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError2'
          description: Not Found
        '500':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError2'
          description: Internal Server Error
      tags:
      - Customer Virtual Accounts
      deprecated: false
      description: This API allows you to download an account ownership certificate.
      operationId: AccountOwnershipCertificate
      summary: Account Ownership Certificate
      x-info:
        apiType: external
      security:
      - default: []
components:
  schemas:
    AccountStatusResponse:
      properties:
        bankName:
          description: This field contains the name of the bank which has issued the
            account linked to this funding instrument.
          type: string
        clientHashId:
          description: This field contains the unique 36-character client identifier
            generated and shared before API handshake.
          type: string
        country:
          description: This field contains the [2-letter ISO-2 country code](doc:currency-and-country-codes)
            where the bank account resides.
          type: string
        createdAt:
          description: This field contains the timestamp when the funding instrument
            was added.
          format: date-time
          type: string
        currency:
          description: This field contains the 3-letter [ISO-4217 currency code](doc:currency-and-country-codes)
            for the account to be linked.
          example: USD
          type: string
        customerHashId:
          description: This field contains the unique 36-character customer identifier
            generated and shared before API handshake.
          type: string
        fundingChannel:
          description: The field shows the mode of funding the wallet.
          enum:
          - DIRECT_DEBIT
          example: DIRECT_DEBIT
          type: string
        fundingInstrumentId:
          description: This field contains the unique 36-character funding instrument
            identifier.
          type: string
        maskedAccountNumber:
          description: This field contains the masked bank account number in the format
            XXXXXXXXXXXX1111.
          type: string
        redirectURL:
          description: This field contains the URL where the customer is redirected.
          type: string
        routingType:
          description: This field contains the routing code type, for example, 'ACH
            CODE' for US.
          type: string
        routingValue:
          description: This field contains the routing code value.
          type: string
          example: '011401533'
        saved:
          description: This flag returns true when the funding instrument is saved.
            This can return false when funding instrument status is not yet approved.
          type: boolean
        status:
          description: This field contains the current status of the funding instrument.
          enum:
          - ACTIVE
          - INACTIVE
          - BLOCKED
          - UPLOADED
          - APPROVED
          - REJECTED
          - FAILED
          - SUCCESS
          - FAILURE
          - PARTIALLY SUCCESS
          - SYNC
          - NOT SYNC
          - PENDING
          - REQUIRES_ACTION
          - CLEAR
          - DECLINED
          - ACCOUNT_BLOCKED
          - AMOUNT_BLOCKED
          - DE_LINKED
          - CANCELLED
          type: string
        statusDescription:
          description: This field contains the additional information of the status
            response.
          type: string
        updatedAt:
          description: This field contains the timestamp when the funding instrument
            was last updated.
          format: date-time
          type: string
        walletHashId:
          description: This field contains the unique 36-character wallet identifier
            generated and shared before API handshake.
          type: string
      title: Account status
      type: object
    PayinApiError:
      properties:
        errors:
          description: List of errors occurred.
          example:
          - field1 is not valid
          - field2 is not valid
          items:
            type: string
          type: array
        message:
          description: Error message descriptor.
          example: Error message descriptor.
          type: string
        status:
          description: 'HttpStatus of the request : BAD_REQUEST, INTERNAL_SERVER_ERROR.'
          enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
          example: BAD_REQUEST
          type: string
      title: ApiError
      type: object
    ApiResponseOfstring:
      properties:
        body:
          description: This field will return the response message from the server.
          example: Success
          type: string
        code:
          description: This field will return the HTTP status code with its interpretation.
          example: 200 OK
          type: string
        errors:
          description: Error description if any.
          items:
            type: string
          type: array
        message:
          description: This field will return the response message.
          example: Success
          type: string
        status:
          description: This field signifies if the request was successful or has an
            error.
          enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
          example: OK
          type: string
      title: ApiResponseOfstring
      type: object
    ConfirmFundingInstrumentRequestDTO:
      properties:
        otpReceived:
          description: The one-time password (OTP) you received from Nium when calling
            the Add Funding Instrument API.This is a required field for EU and UK
            direct deposit.
          type: string
      title: ConfirmFundingInstrumentRequestDTO
      type: object
    CustomerLinkAccountRequest:
      properties:
        accountNumber:
          description: This field accepts the customer account number or IBAN.
          example: '55779911'
          type: string
        country:
          description: This field accepts the [2-letter ISO-2 country code](doc:currency-and-country-codes)
            where the bank account resides.
          example: US
          type: string
        currency:
          description: This field accepts the 3-letter [ISO-4217 currency code](doc:currency-and-country-codes)
            for the linked account.
          example: USD
          type: string
        fundingChannel:
          description: This field indicates the mode of funding a wallet. Adding a
            new funding instrument is only supported for direct debit.
          enum:
          - DIRECT_DEBIT
          example: DIRECT_DEBIT
          type: string
        routingCodes:
          description: This field accepts the List of routing code type and value.
          items:
            $ref: '#/components/schemas/RoutingInfo'
          type: array
      required:
      - country
      - currency
      - fundingChannel
      title: Customer link account request
      type: object
    LinkAccountResponse:
      properties:
        country:
          description: This field accepts the [2-letter ISO-2 country code](doc:currency-and-country-codes)
            where the bank account resides.
          example: US
          type: string
        createdAt:
          description: This field contains the timestamp when the funding instrument
            was added.
          format: date-time
          type: string
        currency:
          description: This field accepts the 3-letter [ISO-4217 currency code](doc:currency-and-country-codes)
            for the account to be linked.
          example: USD
          type: string
        fundingChannel:
          description: The field shows the mode of funding the wallet. Only direct
            debit is supported when adding a new funding instrument.
          enum:
          - DIRECT_DEBIT
          type: string
        fundingInstrumentId:
          description: The unique 36-character alphanumeric identifier of a funding
            instrument. The ID is a bank account identifier when the funding channel
            is direct debit.
          type: string
        returnUrl:
          description: This field contains the URL where the customer is redirected.
          type: string
        status:
          description: "This field contains the status of the request. The possible\
            \ values are: \n PENDING \n FAILED"
          type: string
      title: Link account response
      type: object
    RoutingInfo:
      properties:
        type:
          description: This field accepts the routing code type.
          enum:
          - SWIFT
          - TRANSIT_NUMBER
          - BSB_CODE
          - SORT_CODE
          example: SORT_CODE
          type: string
        value:
          description: This field accepts the routing code value.
          example: 200000
          type: string
      title: RoutingInfo
      type: object
    WalletFundDTO:
      properties:
        amount:
          description: This field is the amount in destination currency which is to
            be transferred. If the amount is provided, it will take precedence over
            sourceAmount field.
          example: 500
          format: double
          type: number
        clientHashId:
          type: string
        countryIpAddress:
          description: The country IP for the device by the customer for initiating
            the request.
          example: 2.2.2.2
          type: string
        currencyMap:
          additionalProperties:
            format: double
            type: number
          type: object
        destinationCurrencyCode:
          description: This field contains the 3-letter [ISO-4217 currency code](doc:currency-and-country-codes)
            for the destination amount.
          example: SGD
          type: string
        deviceKey:
          description: Device key
          example: 1234567890
          type: string
        fundingChannel:
          description: The value for funding channels can be prefund, bank_transfer,
            cards, or direct_debit. Fund wallet using prefund mode is possible as
            cross-currency. Fund wallet using bank_transfer mode is only possible
            from SGD to SGD and not cross-currency. direct_debit is only applicable
            for USA
          enum:
          - PREFUND
          - BANK_TRANSFER
          - CARD
          - DIRECT_DEBIT
          example: BANK_TRANSFER
          type: string
        fundingInstrumentExpiry:
          description: This is base64-encoded expiry date in MMYY format. This is
            required in case of new card addition.
          type: string
        fundingInstrumentHolderName:
          description: Name of the card holder as printed on the card. Maximum length
            of this field is 26 characters. This is required in case of new card.
          example: John Smith
          type: string
        fundingInstrumentId:
          description: This field is the unique 36-character funding instrument identifier.
            The id is a card hash when fundingChannel is cards and applicable only
            for existing card and not needed for a new card. The id is a bank account
            identifier when the funding channel is direct debit.
          type: string
        fundingInstrumentNumber:
          description: This is 16-digit Base64-encoded card number. This is required
            in case of new card addition.
          type: string
        fundingInstrumentSecurityNumber:
          description: This is base64-encoded 3-digit CVV number. This is required
            in case of both new and existing card.
          type: string
        ipAddress:
          description: The IP address of the device used by the customer for initiating
            the request.
          example: 192.168.1.1
          type: string
        pocketName:
          description: This is the name of the pocket defined under base currency.
          example: DEFAULT
          type: string
        save:
          description: Save funding instrument for future purpose
          example: true
          type: boolean
        sessionId:
          description: The session Id for the session of the customer for initiating
            the request.
          example: '1234'
          type: string
        sourceAmount:
          description: This field is the amount in source currency that is to be transferred.
            If amount field is provided, it will take precedence over sourceAmount
          example: 15.34
          format: double
          type: number
        sourceCurrencyCode:
          description: This field contains the 3-letter [ISO-4217 currency code](doc:currency-and-country-codes)
            for the source amount.
          example: SGD
          type: string
        statementNarrative:
          description: "This field allows clients to pass a narrative that they want\
            \ to be displayed in the payer\u2019s account statement when they are\
            \ pulling funds using Direct Debit. The field value will be truncated\
            \ at 10 chars for UK and US, and 140 chars for EU."
          type: string
      required:
      - destinationCurrencyCode
      - fundingChannel
      - sourceCurrencyCode
      title: Wallet fund
      type: object
    WalletFundResponseDTO:
      properties:
        destinationAmount:
          description: The credited amount.
          example: 500
          format: double
          type: number
        destinationCurrencyCode:
          description: This field contains the 3-letter [ISO-4217 currency code](doc:currency-and-country-codes)
            for the destination amount.
          example: USD
          type: string
        paymentMethods:
          description: "It is an array composed of three types of objects:\n 1. Bank\
            \ transfer data\n2. Dynamic pay now code\n3. Static pay now code\n"
          items:
            anyOf:
            - $ref: '#/components/schemas/BankTransfer'
            - $ref: '#/components/schemas/DynamicPayNow'
            - $ref: '#/components/schemas/StaticPayNow'
            discriminator:
              propertyName: type
          type: array
        returnUrl:
          description: This is 3DS stripe URL generated for entering OTP.
          type: string
        sourceAmount:
          description: An amount to be converted.
          example: 500
          format: double
          type: number
        sourceCurrencyCode:
          description: This field contains the 3-letter [ISO-4217 currency code](doc:currency-and-country-codes)
            for the source amount.
          example: SGD
          type: string
        status:
          description: "This field can take the following values:\n Pending: Transaction\
            \ authorization is awaiting success or failure\nApproved: Transaction\
            \ is successfully authorized\nRejected: Transaction is rejected due to\
            \ NIUM risk and compliance policies\nDeclined: Transaction is declined\n\
            Reversal: Transaction is reversed\nDisputed: A dispute has been raised\
            \ for the transaction\nDisputeClosed: Dispute raised for the transaction\
            \ is resolved."
          example: Pending
          type: string
        systemReferenceNumber:
          description: Transaction reference number generated by card issuance platform.
          example: FW5289214401
          type: string
      title: Wallet fund response
      type: object
    WalletFundingInstrumentsResponseDTO:
      properties:
        bankName:
          description: This field contains the name of the bank which has issued the
            account linked to this funding instrument.
          type: string
        cardBankName:
          description: This field contains the name of the bank which has issued the
            funding instrument.
          example: THE CHASE MANHATTAN BANK
          type: string
        cardNetwork:
          description: This field contains the card network details. We currently
            support Visa and MasterCard. It can contain one of the following - visa
            OR mastercard.
          example: visa
          type: string
        cardType:
          description: This field contains the type of funding card. It can contain
            one of the following - credit OR debit.
          example: credit
          type: string
        clientHashId:
          description: This field contains the unique 36-character client identifier
            generated and shared before API handshake.
          example: c9364508-bd8e-4f6c-a481-8b0cd9a0a7b3
          type: string
        country:
          description: This field contains the Country.
          example: US
          type: string
        createdAt:
          description: This field contains the timestamp of adding funding instrument
            in YYYY-MM-DD hh:mm:ss format.
          example: '2021-01-13 11:13:53'
          format: date-time
          type: string
        currency:
          description: This field contains the currency.
          example: USD
          type: string
        customerHashId:
          description: This field contains the unique 36-character customer identifier
            generated and shared before API handshake.
          example: 39396524-6f07-4abf-a957-9cc4f7f927cd
          type: string
        fundingChannel:
          description: This field contains the funding channel of the funding instrument.
          enum:
          - DIRECT_DEBIT
          example: DIRECT_DEBIT
          type: string
        fundingInstrumentId:
          description: This field contains the unique 36-character funding instrument
            identifier.
          example: e5bc0d30-6455-4942-b65e-3a195fc5fbd8
          type: string
        maskCardNumber:
          description: This field contains the 16-digit masked card number in format
            1234-56xx-xxxx-3456.
          example: 4000-00xx-xxxx-0446
          type: string
        maskedAccountNumber:
          description: This field contains the masked account number in the format
            where only last 4 digits are visible.
          example: XXXXXXXXXXXX1111
          type: string
        routingType:
          description: This field contains the routing type.
          example: ACH CODE
          type: string
        routingValue:
          description: This field contains the routing value.
          example: '011401533'
          type: string
        saved:
          description: This flag indicates whether the funding instrument is saved
            or not.
          example: true
          type: boolean
        status:
          description: This field contains the status of the funding instrument.
          enum:
          - ACTIVE
          - INACTIVE
          - BLOCKED
          - UPLOADED
          - APPROVED
          - REJECTED
          - FAILED
          - SUCCESS
          - FAILURE
          - PARTIALLY SUCCESS
          - SYNC
          - NOT SYNC
          - PENDING
          - REQUIRES_ACTION
          - CLEAR
          - DECLINED
          - ACCOUNT_BLOCKED
          - AMOUNT_BLOCKED
          - DE_LINKED
          - CANCELLED
          example: APPROVED
          type: string
        threeDSecureUsage:
          description: This flag indicates whether 3DS verification is supported on
            the card.
          example: true
          type: boolean
        updatedAt:
          description: This field contains the timestamp of last update to the funding
            instrument in YYYY-MM-DD hh:mm:ss format
          example: '2021-01-13 11:13:53'
          format: date-time
          type: string
        walletHashId:
          description: This field contains the unique 36-character wallet identifier
            generated and shared before API handshake.
          example: f898c437-21b6-4050-8457-c70cc035644c
          type: string
      title: Wallet funding instruments response
      type: object
    WalletApiError:
      properties:
        errors:
          description: List of errors occurred.
          example:
          - field1 is not valid
          - field2 is not valid
          items:
            type: string
          type: array
        message:
          description: Error message descriptor.
          example: Error message descriptor.
          type: string
        status:
          description: 'HttpStatus of the request : BAD_REQUEST, INTERNAL_SERVER_ERROR.'
          enum:
          - 200 OK
          - 400 BAD_REQUEST
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 500 INTERNAL_SERVER_ERROR
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          example: BAD_REQUEST
          type: string
      title: ApiError
      type: object
    ApiError2:
      properties:
        errors:
          description: List of errors occurred.
          example:
          - field1 is not valid
          - field2 is not valid
          items:
            type: string
          type: array
        message:
          description: Error message descriptor.
          example: Error message descriptor.
          type: string
      title: ApiError2
      type: object
    PaymentIdCientTagsResponseDTO:
      properties:
        tags:
          items:
            $ref: '#/components/schemas/PaymentIdClientTagResponseDTO'
          type: array
      title: PaymentId cient tags response
      type: object
    PaymentIdClientTagResponseDTO:
      properties:
        key:
          type: string
        message:
          type: string
      title: PaymentId client tag response
      type: object
    PaymentIdRequestDTO2:
      properties:
        tags:
          description: 'This object contains the user defined key-value pairs provided
            by the client.

            The maximum number of tags allowed is 15.'
          items:
            $ref: '#/components/schemas/WalletPaymentIdsTagRequestDTO'
          type: array
        accountCategory:
          description: This field accepts the account category while assigning a virtual
            account
          enum:
          - SELF_FUNDING_ACCOUNT
          - COLLECTION_ACCOUNT
          - 'Null'
          type: string
        bankName:
          description: This field accepts the bank name.
          type: string
        currencyCode:
          description: This field accepts the 3-letter [ISO-4217 currency code](doc:currency-and-country-codes).
          type: string
      required:
      - bankName
      - currencyCode
      title: PaymentId request
      type: object
    PaymentIdResponseDTO2:
      properties:
        bankName:
          type: string
        currencyCode:
          type: string
        uniquePayerId:
          type: string
        uniquePaymentId:
          type: string
      title: PaymentId response
      type: object
    PaymentIdTagRequestDTO:
      properties:
        tags:
          description: 'This object accepts the user defined key-value pairs.

            The maximum number of tags allowed is 15.'
          items:
            $ref: '#/components/schemas/WalletPaymentIdsTagRequestDTO2'
          type: array
        currencyCode:
          description: This field accepts the 3-letter [ISO-4217 currency code](doc:currency-and-country-codes).
          type: string
        uniquePaymentId:
          description: This field contains the unique virtual account assigned to
            customer.
          type: string
      required:
      - currencyCode
      - tags
      - uniquePaymentId
      title: PaymentId tag request
      type: object
    VirtualAccountRequestDTO:
      properties:
        currencyCode:
          type: string
        endDate:
          type: string
        order:
          description: Property order
          enum:
          - DESC
          - ASC
          example: DESC
          type: string
        page:
          description: Page number
          example: 0
          format: int32
          type: integer
        property:
          description: Property name
          enum:
          - createdAt
          example: createdAt
          type: string
        size:
          description: Page size
          example: 20
          format: int32
          type: integer
        startDate:
          type: string
        tagKey:
          type: string
        tagValue:
          type: string
      title: VirtualAccountRequestDTO
      type: object
    VirtualAccountResponseDTO:
      properties:
        content:
          items:
            $ref: '#/components/schemas/WalletPaymentIdsResponseDTO'
          type: array
        totalElements:
          format: int64
          type: integer
          description: This field contains the total number of items in response.
        totalPages:
          format: int32
          type: integer
          description: This field contains the number of pages in response body.
      title: Virtual account response
      type: object
    WalletPaymentIdsResponseDTO:
      properties:
        tags:
          additionalProperties:
            type: string
          type: object
          description: This is a map object containing user defined key-value pairs
            provided by the client for the wallet payment IDs.
        accountCategory:
          enum:
          - SELF_FUNDING_ACCOUNT
          - COLLECTION_ACCOUNT
          type: string
        accountName:
          type: string
          description: This field contains the account name of the virtual account.
        accountType:
          type: string
          description: This field contains the account type of the virtual account.
        bankAddress:
          type: string
          description: This field contains the bank address of the virtual account.
        bankName:
          type: string
          description: 'This field represents the bank name of the virtual account
            and the possible values are:

            * BOL_LT

            * MONOOVA_AU

            * DBS_HK

            * DBS_SG

            * JPM_AU

            * JPM_SG

            * CB_GB

            * CFSB_USINTL

            * JPM_UK'
        currencyCode:
          type: string
          description: This field contains the 2-letter [ISO-2 country code](doc:currency-and-country-codes).
        fullBankName:
          type: string
          description: This field contains the complete name of the bank for the virtual
            account.
        routingCodeType1:
          type: string
          description: This field contains the routing code type 1.
        routingCodeType2:
          type: string
          description: This field contains the routing code type 2.
        routingCodeValue1:
          type: string
          description: This field contains the routing code value 1. Refer to the
            [Examples of Routing Codes](/apis/docs/routing-codes#examples-of-routing-codes).
        routingCodeValue2:
          type: string
          description: This field contains the routing code value 2.
        status:
          enum:
          - ACTIVE
          - INACTIVE
          - BLOCKED
          - SUSPENDED
          - UPLOADED
          - APPROVED
          - REJECTED
          - FAILED
          - SUCCESS
          - FAILURE
          - PARTIALLY SUCCESS
          - SYNC
          - NOT SYNC
          - PENDING
          - REQUIRES_ACTION
          - CLEAR
          - DECLINED
          - ACCOUNT_BLOCKED
          - AMOUNT_BLOCKED
          type: string
        uniquePayerId:
          type: string
          description: This field contains the unique payer ID.
        uniquePaymentId:
          type: string
          description: This field contains the unique payment ID.
      title: Wallet paymentIds response
      type: object
    WalletPaymentIdsTagRequestDTO:
      properties:
        key:
          description: 'This field accepts the name of the tag.

            The maximum key length limit is 128 characters.'
          type: string
        value:
          description: 'This field accepts the value of the tag.

            The maximum value length limit is 256 characters.'
          type: string
      required:
      - key
      title: Wallet paymentIds tag request
      type: object
    WalletPaymentIdsTagRequestDTO2:
      properties:
        action:
          description: "This field accepts the action which determines the type of\
            \ operation that needs to be performed. The possible values are:\n DELETE:\
            \ When tag needs to be deleted.\nMAINTAIN: When tags need to be added\
            \ or updated.\n"
          enum:
          - MAINTAIN
          - DELETE
          type: string
        key:
          description: 'This field accepts the name of the tag.

            The maximum key length limit is 128 characters.

            '
          type: string
        value:
          description: 'This field accepts the value of the tag.

            The maximum value length limit is 256 characters.

            Note: In case the tags.action is MAINTAIN and the value is not present
            for a tag, system will not allow the request.'
          type: string
      required:
      - action
      - key
      title: Wallet paymentIds tag request
      type: object
    BankTransfer:
      description: This term refers to a method of electronic payment that allows
        you to transfer funds from your bank account to another bank account, either
        within the same bank or to a different financial institution. This method
        of payment is often used for larger transactions, such as paying bills or
        sending money to a friend or family member.
      properties:
        accountName:
          description: This field contains the name of NIUM bank account.
          type: string
        accountNumber:
          description: This field contains the physical bank account number of NIUM.
          type: string
        bankName:
          description: This field contains the bank name to which money has to be
            transferred.
          type: string
        iban:
          description: This field contains the IBAN that is International Bank Account
            Number. It is a combination of country code, check digits, bank code,
            sort code and account number.
          type: string
        sortCode:
          description: UEN number associated with NIUM PayNow account.
          type: string
        type:
          description: This field contains the type of payment method such as staticPayNow,
            dynamicPayNow or bankTransfer
          enum:
          - bankTransfer
          type: string
      required:
      - type
      title: Bank transfer
      type: object
    DynamicPayNow:
      description: This term refers to a type of payment method where the amount to
        be paid can be adjusted or changed in real-time before the payment is initiated.
        This type of payment is often used for transactions with dynamic pricing,
        such as buying a stock or making a bid in an auction.
      properties:
        UEN:
          description: This field contains the UEN number associated with NIUM PayNow
            account.
          type: string
        type:
          description: This field contains the type of payment method such as staticPayNow,
            dynamicPayNow, or bankTransfer.
          enum:
          - dynamicPayNow
          type: string
      required:
      - type
      title: Dynamic pay now code
      type: object
    StaticPayNow:
      description: This term refers to a type of payment method where the amount to
        be paid is fixed and cannot be changed once the payment is initiated. This
        type of payment is often used for one-time transactions, such as paying for
        a product or service.
      properties:
        qrCode:
          description: This field contains the codec-base64 encoded QRCode image data.
            This will provide the QRCode image on decoding. This image can be read
            by devices such as smartphone or camera.
          type: string
        type:
          description: This field contains the type of payment method such as staticPayNow,
            dynamicPayNow or bankTransfer
          enum:
          - staticPayNow
          type: string
      required:
      - type
      title: Static pay now code
      type: object
  securitySchemes:
    default:
      in: header
      name: x-api-key
      type: apiKey
security:
- default: []
